Задача: написать параллельную программу для решения СЛАУ любым методом.

---------------------------------------------------------------------------------------------------------------------------

Входные данные (аргументы командной строки):
p - степень параллелизма
M - количество уравнений в системе
N - количество неизвестных в системе
A_path - путь к файлу с коэффициентами СЛАУ
b_path - путь к файлу со свободными членами СЛАУ

---------------------------------------------------------------------------------------------------------------------------

Выходные данные:
Файл solution.txt с решением СЛАУ или сообщение, что СЛАУ несовместная (в случае, если не выполнено 2 доп. требование).

---------------------------------------------------------------------------------------------------------------------------

ЛР:
1) На любом императивном ЯП (предлагается C#). Рекомендуется сдать лабу до конца марта.
2) На любом функциональном языке (кроме FPTL) (предлагается Haskell). Рекомендуется сдать лабу до середины апреля.
3) На FPTL. Рекомендуется сдать лабу до конца апреля.
4) На любом ЯП с использованием программного интерфейса MPI (предлагается mpi4py). Рекомендуется сдать лабу до середины мая.
5) Провести сравнение полученных результатов по критериям времени выполнения, ускорения, используемой памяти,
	описать пользовательский опыт работы с каждым использованном ЯП, сделать выводы.
	(доклад для Кутепова, не учитывается в таблице результатов)

---------------------------------------------------------------------------------------------------------------------------

Минимальные требования:
1) Должно находиться решение для квадратных (M = N) СЛАУ размерностью 10^4.
2) Должна регулироваться степень параллелизма (зернистость).
   Если всё работает правильно, то общее количество задач k = p * C,
   где p - зернистость, С - некоторая константа (в идеале C = 1).

1 доп. требование:
Должно находиться общее решение для прямоугольных СЛАУ.

2 доп. требование:
Должно находиться решение для переопределённых и несовместных СЛАУ (регрессионный анализ).