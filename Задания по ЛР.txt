Задача: написать параллельную программу для решения СЛАУ любым методом.

---------------------------------------------------------------------------------------------------------------------------

Входные данные (аргументы командной строки):
p - степень параллелизма
M - количество уравнений в системе
N - количество неизвестных в системе
A_path - путь к файлу с коэффициентами СЛАУ
b_path - путь к файлу со свободными членами СЛАУ

Файлы содержат записи чисел с плавающей точкой произвольного вида, разделённые пробелами или символами переноса каретки.
Те может содержать любую из следующих эквивалентных записей:
0.0000000000000001
0,0000000000000001
1e-16
1E-16
1.e-16
1,E-16
10e-17
10E-17

---------------------------------------------------------------------------------------------------------------------------

Выходные данные:

Файл solution.txt с решением СЛАУ вида:
X0 = -0.125*X1 + 0.25
X1 = X1
(определения переменных должны разделяться символом переноса каретки)

Или сообщение, что СЛАУ несовместная (в случае, если не выполнено 2 доп. требование):
Incompatible

---------------------------------------------------------------------------------------------------------------------------

ЛР:
1) На любом императивном ЯП (предлагается C#).
2) На любом функциональном языке (кроме FPTL) (предлагается Haskell).
3) На FPTL.
4) На любом ЯП с использованием программного интерфейса MPI (предлагается mpi4py).
5) Провести сравнение полученных результатов по критериям времени выполнения, ускорения, используемой памяти,
	описать пользовательский опыт работы с каждым использованном ЯП, сделать выводы.
	(доклад для Кутепова, не учитывается в таблице результатов)

---------------------------------------------------------------------------------------------------------------------------

Минимальные требования:
1) Должно находиться решение для квадратных (M = N) СЛАУ размерностью 10^4.
2) Должна регулироваться степень параллелизма (зернистость).
   Если всё работает правильно, то общее количество задач k = p * C,
   где p - зернистость, С - некоторая константа (в идеале C = 1).

1 доп. требование:
Должно находиться общее решение для прямоугольных СЛАУ.

2 доп. требование:
Должно находиться решение для переопределённых и несовместных СЛАУ (регрессионный анализ).