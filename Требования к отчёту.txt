1)	Титульный лист.

2)	Постановка задачи.

3)	Описание метода.

4)  Описание инструментария: 
какие библиотеки используются, как они устроены, если за параллелизм отвечают они.
(в т.ч. версия используемого интерпретатора FPTL)
(для каждой лабы свой подраздел).

5)	Описание программы (каким образом реализовано распараллеливание, описание функций) 
(для каждой лабы свой подраздел, если требуется, но по хорошему реализации должны быть +- эквивалентными).
	
6)  Подтверждение корректности работы всех реализаций 
(например, скрин из вольфрама для задачи малой сложности, или решение обратной задачи).

7) 	Характеристики компьютера, используемого для тестов.
	(большую часть может собрать автосборщик статистики)

	а) Название, степпинг, количество ядер, количество потоков инструкций, базовая частота, размеры кешей процессора.
	б) Название (Part Number), тип, частота, объём, режим работы оперативной памяти.
		CPU-Z https://www.cpuid.com/softwares/cpu-z.html (для загрузки может потребоваться VPN)
	
	в) Название, разрядность, версия, сборка ОС.
	
	г) Частота процессора во время выполнения программы.
		CPUID HWMonitor https://www.cpuid.com/softwares/hwmonitor.html (для загрузки может потребоваться VPN)
		заодно можете посмотреть, не перегревается ли ваш ПК :-)

8)  Нужно указать на основании скольких запусков и 
	каким образом была получена собранная статистика.
	(Автосборщик статистики берёт средний результат по времени и максимальный по памяти).
	
9) Описание наборов данных, на которых производится тестирование (минимум 2: 1 задача большого объёма и 1 небольшого).
	Объём данных нужно подобрать таким образом, 
	чтобы время выполнения с малым набором данных на одном вычислительном потоке было не меньше секунды (желательно около 10 секунд),
	а время выполнения с большим набором данных на одном вычислительном потоке было не меньше пары минут.

10)	Экспериментальное исследование (для каждой реализации и набора данных свой подраздел).

	а) Суммарное количество задач, создаваемых на каждой отдельной степени зернистости.
	Привести зависимость, если она точно известна (см. описание лаб),
	либо в виде таблицы и графика, если используется автоматическое распараллеливание.

	б) Таблица со временем выполнения T в зависимости от степени зернистости P и количества рабочих потоков N.
	Каждое значение как минимум на основании 5 замеров (по крайней мере в случае, если время выполнения меньше 2 минут).
	Для замеров можно использовать средство автоматического сбора статистики ( https://github.com/Zumisha/Auto-Statistic ).
	
	в) Графическая интерпретация собранных данных: время T от степени параллелизма P. 
	Для каждого количества потоков N своя линия на полотне.
	
	г) Промежуточный вывод (словесное описание).

    д) Таблица со значениями ускорения S в зависимости от степени зернистости P и количества рабочих потоков N.
	
	е) Графическая интерпретация собранных данных: ускорение S от степени параллелизма P. 
	Для каждого количества потоков N своя линия на полотне.
	
	ж) Промежуточный вывод (словесное описание).
	
    з) Таблица со значениями максимального использования оперативной памяти M в зависимости от степени зернистости P и количества рабочих потоков N.
	
	и) Графическая интерпретация собранных данных: максимальное использование оперативной памяти M от степени параллелизма P. 
	Для каждого количества потоков N своя линия на полотне.
	
	к) Промежуточный вывод (словесное описание).

11)	Сравнительный анализ.

	а) Оценка масштабируемости (для каждой реализации):
		график с двумя y-осями (своя для каждого набор данных) для n = количеству ядер процессора;
		вывод.

	б) Сравнительная оценка реализаций (для каждого параметра (T, S, M), для каждого набора данных),
		вывод.

12) Общие выводы (в т.ч. о пользовательском опыте).

13) Код реализаций.